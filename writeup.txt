public StudentModel selectStudent(String npm) {
		// TODO Auto-generated method stub
		for (int i = 0; i < studentList.size(); i++)
		{
			if (npm.equals(studentList.get(i).getNpm()))
			{
				return studentList.get(i);
			}
		}
		return null;
	}
	
	

Pertanyaan 1:
Data berhasil ditambahkan

Pertanyaan 2:
White label page error. karena value atributnya true.

Pertanyaan 3:
Muncul, NPM = 12345, Name = chanek, GPA = 3.43

Pertanyaan 4:
White label page error. Karena belum dimasukkan datanya.

Pertanyaan 5:
Muncul

Pertanyaan 6:
Muncul

Latihan:
- Tambahkan method di controller, copy paste dari view by npm

- Tambahkan 2 method ini di inMemoryStudentService
@Override
	public boolean checkByNPM(String npm)
	{
		for (int i = 0; i < studentList.size(); i++)
		{
			if (npm.equals(studentList.get(i).getNpm()))
			{
				
				return true;
			}
		}
		return false;
	}
	
	@Override
	public boolean deleteStudent(String npm) {
		// TODO Auto-generated method stub
		for (int i = 0; i < studentList.size(); i++)
		{
			if (npm.equals(studentList.get(i).getNpm()))
			{
				studentList.remove(i);
				return true;
			}
		}
		return false;
	}
	
- Tambahkan method2 ini di StudentController

@RequestMapping(value = "/student/view/{npm}", method=RequestMethod.GET)
	public String viewnpm(@PathVariable String npm , Model model){
		if (studentService.checkByNPM(npm))
		{
			return "view";
		}
		return "nostudent";
		
	}
	
	
	@RequestMapping(value = "/student/delete/{npm}", method=RequestMethod.GET)
	public String deletenpm(@PathVariable String npm , Model model){
		boolean check = studentService.deleteStudent(npm);
		
		if (check == true)
		{
			return "deletesuccess";
		}
		else
		{
			return "deleteerror";
		}
		
	}

- Ubah method view pada Student controller menjadi seperti ini:
@RequestMapping("/student/view")
	public String view(Model model, @RequestParam(value = "npm", required = false) String npm){
		StudentModel student = studentService.selectStudent(npm);
		model.addAttribute("student", student);
		if (npm == null)
		{
			return "npmempty";
		}
		return "view";
		
	}



a. Ringkasan:
- @PathVariable untuk membut path variable
- th:text dapat digunakan untuk iterasi

b. Sudah dijelaskan diatas

c. Sudah dijelaskan diatas

d. 
- masukkan npm
- method akan menjalankan loop yang memberikan return true atau false. return true jika menemukan datanya dan menghapus. Return false jika tidak menemukan datanya
- Jika yang direturn true, dialihkan ke halaman berhasil menghapus
- Sebaliknya, jika return false, akan dialihkan ke halaman data tidak ditemukan

	

	
	